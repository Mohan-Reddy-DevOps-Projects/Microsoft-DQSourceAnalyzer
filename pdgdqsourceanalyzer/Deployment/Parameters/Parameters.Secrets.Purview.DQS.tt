<#@ include file="$(ManifestPath)\\ManifestHelper.ttinclude" once="true" #>
<# 
foreach (var environment in environments)
{
#>
{
  "$schema": "http://schema.express.azure.com/schemas/2015-01-01-alpha/RolloutParameters.json",
  "contentVersion": "1.0.0.0",
  "extensions":[
  {
    "name": "CreateOneCertIssuer-Public",
    "type": "Microsoft.KeyVault.DataPlane/SetCertificateIssuer",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
        "authentication": {
          "type": "AadApplicationAuthentication",
          "reference": {
            "provider": "AzureKeyVault",
            "parameters": {
              "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
            }
          },
          "properties": {
            "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
          }
        }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultName(environment) #>.vault.azure.net"
      },
      "issuerName": {
        "value": "OneCertV2-PublicCA"
      },
      "provider": {
        "value": "OneCertV2-PublicCA"
      }
    }
  },
  {
    "name": "CreateOneCertIssuer-DQKeyVault-Private",
    "type": "Microsoft.KeyVault.DataPlane/SetCertificateIssuer",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
      "authentication": {
        "type": "AadApplicationAuthentication",
        "reference": {
          "provider": "AzureKeyVault",
          "parameters": {
            "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
          }
        },
        "properties": {
          "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
        }
      }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultName(environment) #>.vault.azure.net"
      },
      "issuerName": {
        "value": "OneCertV2-PrivateCA"
      },
      "provider": {
        "value": "OneCertV2-PrivateCA"
      }
    }
  },
  {
    "name": "CreateCertIssuer-LogicAppKeyVault-Pvt",
    "type": "Microsoft.KeyVault.DataPlane/SetCertificateIssuer",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
      "authentication": {
        "type": "AadApplicationAuthentication",
        "reference": {
          "provider": "AzureKeyVault",
          "parameters": {
            "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
          }
        },
        "properties": {
          "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
        }
      }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultLogicAppName(environment) #>.vault.azure.net"
      },
      "issuerName": {
        "value": "OneCertV2-PrivateCA"
      },
      "provider": {
        "value": "OneCertV2-PrivateCA"
      }
    }
  },
  {
    "name": "CreateDataQualityServerCertificate",
    "type": "Microsoft.KeyVault.DataPlane/CreateCertificate",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
      "authentication": {
        "type": "AadApplicationAuthentication",
        "reference": {
          "provider": "AzureKeyVault",
          "parameters": {
            "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
          }
        },
        "properties": {
          "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
        }
      }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultName(environment) #>.vault.azure.net"
      },
      "certificateName": {
        "value": "<#= GetServerCertSecretName(environment) #>"
      },
      "policy": {
        "value": "{'key_props':{'exportable':true,'kty':'RSA','key_size':2048},'secret_props':{'contentType':'application/x-pkcs12'},'x509_props':{'subject':'CN=<#= GetDataQualityServerCertSubjectName(environment) #>','sans':{'dns_names':['<#= GetDataQualityServerCertSubjectName(environment) #>']},'validity_months':12},'lifetime_actions':[{'trigger':{'days_before_expiry':276},'action':{'action_type':'AutoRenew'}}],'issuer':{'name':'OneCertV2-PublicCA'}}"
      },
      "forceNewVersion": {
        "value": "false"
      },
      "tags": {
        "value": "{'service':'Purview.DQS'}"
      }
    }
  },
  {
    "name": "CreateDataQualityClientCertificate",
    "type": "Microsoft.KeyVault.DataPlane/CreateCertificate",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
      "authentication": {
        "type": "AadApplicationAuthentication",
        "reference": {
          "provider": "AzureKeyVault",
          "parameters": {
            "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
          }
        },
        "properties": {
          "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
        }
      }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultName(environment) #>.vault.azure.net"
      },
      "certificateName": {
        "value": "<#= GetClientCertSecretName(environment) #>"
      },
      "policy": {
        "value": "{'key_props':{'exportable':true,'kty':'RSA','key_size':2048},'secret_props':{'contentType':'application/x-pkcs12'},'x509_props':{'subject':'CN=<#= GetDataQualityClientCertSubjectName(environment) #>','sans':{'dns_names':['<#= GetDataQualityClientCertSubjectName(environment) #>']},'validity_months':12},'lifetime_actions':[{'trigger':{'days_before_expiry':276},'action':{'action_type':'AutoRenew'}}],'issuer':{'name':'OneCertV2-PrivateCA'}}"
        },
        "forceNewVersion": {
          "value": "false"
      },
      "tags": {
        "value": "{'service':'Purview.DQS'}"
      }
    }
  },
  {
    "name": "CreateDataQualityLogicAppCertificate",
    "type": "Microsoft.KeyVault.DataPlane/CreateCertificate",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
      "authentication": {
        "type": "AadApplicationAuthentication",
        "reference": {
          "provider": "AzureKeyVault",
          "parameters": {
            "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
          }
        },
        "properties": {
          "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
        }
      }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultLogicAppName(environment) #>.vault.azure.net"
      },
      "certificateName": {
        "value": "<#= GetLogicAppClientCertSecretName(environment) #>"
      },
      "policy": {
        "value": "{'key_props':{'exportable':true,'kty':'RSA','key_size':2048},'secret_props':{'contentType':'application/x-pkcs12'},'x509_props':{'subject':'CN=<#= GetLogicAppClientCertSubjectName(environment) #>','sans':{'dns_names':['<#= GetLogicAppClientCertSubjectName(environment) #>']},'validity_months':12},'lifetime_actions':[{'trigger':{'days_before_expiry':276},'action':{'action_type':'AutoRenew'}}],'issuer':{'name':'OneCertV2-PrivateCA'}}"
        },
        "forceNewVersion": {
          "value": "false"
      },
      "tags": {
        "value": "{'service':'Purview.DQS'}"
      }
    }
  },
  {
    "name": "CreateDataQualityGenevaCertificate",
    "type": "Microsoft.KeyVault.DataPlane/CreateCertificate",
    "version": "2020-03-01",
    "connectionProperties": {
      "maxExecutionTime": "PT20M",
      "authentication": {
        "type": "AadApplicationAuthentication",
        "reference": {
          "provider": "AzureKeyVault",
          "parameters": {
            "secretId": "<#= GetSecretGenerationKeyvault(environment) #>/secrets/EV2-Cert"
          }
        },
        "properties": {
          "applicationId": "<#= GetSecretGeneratorAppId(environment) #>"
        }
      }
    },
    "payloadProperties": {
      "vaultBaseUrl": {
        "value": "https://<#= GetKeyVaultName(environment) #>.vault.azure.net"
      },
      "certificateName": {
        "value": "<#= GetGenevaCertSecretName(environment) #>"
      },
      "policy": {
        "value": "{'key_props':{'exportable':true,'kty':'RSA','key_size':2048},'secret_props':{'contentType':'application/x-pkcs12'},'x509_props':{'subject':'CN=<#= GetGenevaCertSubjectName(environment) #>','sans':{'dns_names':['<#= GetGenevaCertSubjectName(environment) #>']},'validity_months':12},'lifetime_actions':[{'trigger':{'days_before_expiry':276},'action':{'action_type':'AutoRenew'}}],'issuer':{'name':'OneCertV2-PrivateCA'}}"
      },
      "forceNewVersion": {
        "value": "false"
      },
      "tags": {
        "value": "{'service':'Purview.DQS'}"
      }
    }
  }]
}
<#
  string fileName = String.Format("Parameters.Secrets.Purview.DQS.{0}.{1}.json", environment["shortName"].ToString(), ToLower(environment["shortLocation"]));
  SaveOutput("Parameters\\generated", fileName);
}
#>
Unused generated text file