<#@ include file="$(ManifestPath)\\ManifestHelper.ttinclude" once="true" #>
<#
foreach (var environment in environments)
{
#>
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "deploymentTags": {
      "value": {
        "Service": "Purview Data Quality Service Infrastructure",
        "Environment": "<#= environment["name"] #>",
        "Build Number": "BUILD_NUMBER"
      }
    },
    "logAnalyticsWorkspaceName": {
      "value": "<#= GetLogAnalyticsWorkspaceName(environment) #>"
    },
    "logAnalyticsLocation": {
      "value": "<#= GetLogAnalyticsLocation(environment) #>"
    },
    "keyVaultName": {
      "value": "<#= GetKeyVaultName(environment)  #>"
    },
    "keyVaultLogicAppName": {
      "value": "<#= GetKeyVaultLogicAppName(environment)  #>"
    },
    "secretGeneratorAppObjectId": {
      "value": "<#= GetSecretGeneratorAppObjectId(environment) #>"
    },
    "aksClusterIdentitySecretName": {
      "value": "<#= GetEnvironmentTypeName(environment) #>-DQ-AKS-ClusterIdentity-Key"
    },
    "aksClusterIdentitySecretKey": {
      "reference": {
        "keyVault": {
          "id": "<#= GetSecretGenerationKeyVaultResourceId(environment) #>"
        },
        "secretName": "DQ-AKS-ClusterIdentity-Key"
      }
    },
    "blobSecretName": {
      "value": "blobConnectionString"
    },
    "globalBlobSecretKey": {
      "reference": {
        "keyVault": {
          "id": "<#= GetSecretGenerationKeyVaultResourceId(environment) #>"
        },
        "secretName": "<#= GetBlobConnectionKeyName(environment)  #>"
      }
    },
    "sparkSecretName": {
      "value": "sparkexternalcomputekey"
    },
    "globalSparkSecretKey": {
      "reference": {
        "keyVault": {
          "id": "<#= GetSecretGenerationKeyVaultResourceId(environment) #>"
        },
        "secretName": "dq-spark-compute-key"
      }
    },
    "ruleAISafetySecretName": {
      "value": "dq-aisafety"
    },
    "globalRuleAISafetySecretKey": {
      "reference": {
        "keyVault": {
          "id": "<#= GetSecretGenerationKeyVaultResourceId(environment) #>"
        },
        "secretName": "dq-aisafety"
      }
    },
    "datastoreCredentialsSecretName": {
      "value": "datastoreCredentials"
    },
    "globalDatastoreCredentialsSecretKey": {
      "reference": {
        "keyVault": {
          "id": "<#= GetSecretGenerationKeyVaultResourceId(environment) #>"
        },
        "secretName": "<#= GetDatastoreCredentialsKeyName(environment)  #>"
      }
    },
    "storageAccountName": {
      "value": "<#= GetStorageAccountName(environment) #>"
    },
    "storageAccountReplicationType": {
      "value": "<#= GetStorageAccountReplicationType(environment) #>"
    },
    "logicAppManagedIdentityName": {
      "value": "<#= GetLogicAppManagedIdentityName(environment) #>"
    },
    "logicAppKeyVaultConnectionName": {
      "value": "<#= GetLogicAppKeyVaultConnectionName(environment) #>"
    },
  }
}
<#
  string fileName = String.Format("Parameters.Infra.Purview.DQS.{0}.{1}.json", environment["shortName"], environment["shortLocation"]);
  SaveOutput("Parameters\\generated", fileName);
}
#>
Unused generated text file